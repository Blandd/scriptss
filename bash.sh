#!/bin/bash
services_to_disable=(cups bluetooth apache2)
unsecure_services=(telnet rlogin rexec ftp tftp)
function section_header(){ echo -e "\n=============================\n$1\n=============================";}
function prompt_run(){ read -p "Run $1? (y/n): " r;[[ "$r" =~ ^[Yy]$ ]]&&$2||echo "$1 skipped.";}
function gather_system_info(){ section_header "System Info";echo "Hostname: $(hostname)";cat /etc/os-release;uname -a;who;echo "Uptime: $(uptime)";df -h;free -h;}
function manage_accounts(){ section_header "Account Mgmt";cat /etc/passwd;cat /etc/group;awk -F: '($3 == 0) {print $1}' /etc/passwd;lastlog;}
function enforce_password_policies(){ section_header "Password Policies"; sed -i '/^PASS_MAX_DAYS/c\PASS_MAX_DAYS   90' /etc/login.defs; sed -i '/^PASS_MIN_DAYS/c\PASS_MIN_DAYS   10' /etc/login.defs; sed -i '/^PASS_WARN_AGE/c\PASS_WARN_AGE   7' /etc/login.defs; [ -f /etc/pam.d/common-password ]&&sed -i 's/pam_unix.so/& minlen=12 ucredit=-1 lcredit=-1 dcredit=-1/' /etc/pam.d/common-password||echo "PAM config missing.";echo "Password policies applied.";}
function update_system(){ section_header "Updating System"; apt update&&apt upgrade -y;apt autoremove -y;apt autoclean;}
function remove_software(){ section_header "Removing Software"; dpkg -l; read -p "Enter software to remove: " s;[ -n "$s" ]&&apt remove -y $s&&apt autoremove -y;}
function disable_services(){ section_header "Disabling Services"; for s in "${services_to_disable[@]}"; do systemctl disable $s 2>/dev/null&&echo "$s disabled"||echo "$s not found"; done;systemctl list-unit-files --state=enabled;}
function configure_firewall(){ section_header "Configuring Firewall"; ufw enable; ufw default deny incoming; ufw allow ssh; ufw allow 80/tcp; ufw allow 443/tcp;ufw status verbose;}
function check_open_ports(){ section_header "Checking Ports"; ss -tuln;netstat -plant;iptables -L -v;}
function check_file_permissions(){ section_header "File Permissions"; find / -type f -perm 777 2>/dev/null; find / -type d -perm 777 2>/dev/null; read -p "Fix permissions for: " f;[ -n "$f" ]&&chmod 644 $f&&echo "Permissions updated.";}
function manage_logs_and_malware(){ section_header "Logs and Malware"; if command -v clamscan &>/dev/null; then clamscan -r / --quiet; else apt install -y clamav&&clamscan -r / --quiet; fi;logrotate --debug;/bin/journalctl --vacuum-time=7d;}
function secure_ssh(){ section_header "Securing SSH"; if [ -f /etc/ssh/sshd_config ]; then sed -i '/^PermitRootLogin/c\PermitRootLogin no' /etc/ssh/sshd_config; sed -i '/^Protocol/c\Protocol 2' /etc/ssh/sshd_config; sed -i '/^PasswordAuthentication/c\PasswordAuthentication no' /etc/ssh/sshd_config; systemctl restart sshd||systemctl restart ssh; else echo "SSH config missing."; fi;}
function configure_network(){ section_header "Configuring Network"; echo "auto eth0" > /etc/network/interfaces.d/eth0; echo "iface eth0 inet static" >> /etc/network/interfaces.d/eth0; read -p "Static IP: " ip; read -p "Netmask: " mask; read -p "Gateway: " gw; echo " address $ip\n netmask $mask\n gateway $gw" >> /etc/network/interfaces.d/eth0; systemctl restart networking; echo "net.ipv6.conf.all.disable_ipv6 = 1" >> /etc/sysctl.conf; echo "net.ipv6.conf.default.disable_ipv6 = 1" >> /etc/sysctl.conf; sysctl -p;ip a;}
function scan_for_backdoors(){ section_header "Scanning Backdoors"; find / -name ".ssh" -o -name ".netrc" -o -name ".rhosts" 2>/dev/null; if command -v chkrootkit &>/dev/null; then chkrootkit; else apt install -y chkrootkit&&chkrootkit; fi; crontab -l;find / -type f \( -name '*.sh' -o -name '*.py' \) -exec grep -l 'nc\|bash -i\|mkfifo' {} \;;}
function scan_unsecure_services(){ section_header "Scanning Unsecure Services"; f=();for s in "${unsecure_services[@]}";do systemctl is-active --quiet $s&&f+=("$s");done; if [ ${#f[@]} -gt 0 ];then echo "Found: ${f[@]}";read -p "Disable & remove? (y/n): " r;[[ "$r" =~ ^[Yy]$ ]]&&for s in "${f[@]}";do systemctl stop $s;systemctl disable $s;apt remove -y $s;done;else echo "None found.";fi;}
function check_cron_jobs(){ section_header "Cron Jobs"; crontab -l;ls -l /etc/cron.*;ls -l /var/spool/cron/crontabs;}
function final_steps(){ section_header "Final Steps";echo "Review system & document changes.";dpkg --audit;apt list --upgradable;}
function manage_users(){ section_header "Manage Users"; awk -F: '{printf "User: %s, UID: %s, GID: %s, Home: %s\n", $1, $3, $4, $6}' /etc/passwd; echo "Listing sudo users:"; getent group sudo|cut -d: -f4; read -p "Enter username to remove: " u; [ -n "$u" ]&&deluser $u&&echo "User $u removed."||echo "No user removed.";}
function configure_all_policies(){ section_header "Configuring All Policies"; enforce_password_policies; secure_ssh; disable_services; configure_firewall; check_file_permissions; configure_network;echo "All policies configured.";}
function change_all_passwords(){ section_header "Changing All Passwords"; while IFS=: read -r user _; do if [[ "$user" != "root" && "$user" != "nobody" ]]; then echo "$user:$(openssl passwd -6 Minecraft#17)" | chpasswd; echo "Password for $user changed."; fi; done < /etc/passwd;}
prompt_run "System Info" gather_system_info;prompt_run "Account Mgmt" manage_accounts;prompt_run "Password Policies" enforce_password_policies;prompt_run "System Update" update_system;prompt_run "Remove Software" remove_software;prompt_run "Disable Services" disable_services;prompt_run "Firewall Config" configure_firewall;prompt_run "Check Ports" check_open_ports;prompt_run "File Permissions" check_file_permissions;prompt_run "Logs & Malware" manage_logs_and_malware;prompt_run "SSH Config" secure_ssh;prompt_run "Network Config" configure_network;prompt_run "Backdoor Scan" scan_for_backdoors;prompt_run "Unsecure Services" scan_unsecure_services;prompt_run "Cron Jobs" check_cron_jobs;prompt_run "Manage Users" manage_users;prompt_run "Configure All Policies" configure_all_policies;prompt_run "Change All Passwords" change_all_passwords;prompt_run "Final Steps" final_steps;
